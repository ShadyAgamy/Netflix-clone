{"version":3,"sources":["requests.js","axios.js","shared/Video/index.js","shared/Row/index.js","shared/Banner/index.js","shared/Nav/index.js","pages/MoviesListPage/index.js","pages/NetflixOriginals/index.js","pages/Homepage/index.js","pages/Trending/index.js","pages/TopRated/index.js","pages/ActionMovies/index.js","pages/ComedyMovies/index.js","pages/HorrorMovies/index.js","pages/RomanceMovies/index.js","pages/Documentaries/index.js","App.js","reportWebVitals.js","index.js"],"names":["API_KEY","requests","fetchTrending","fetchNetflixOriginals","fetchTopRated","fetchActionMovies","fetchComedyMovies","fetchHorrorMovies","fetchRomanceMovies","fetchDocumentaries","instance","axios","create","baseURL","opts","height","width","playerVars","autoplay","Video","movie","console","log","useState","trailerUrl","setTrailerUrl","useEffect","name","movieTrailer","then","url","urlParams","URLSearchParams","URL","search","get","catch","err","videoId","Row","title","fetchedMovies","isLargeRow","routePath","previewMovie","setPreviewMovie","className","to","icon","faAnglesRight","navigation","prevEl","nextEl","spaceBetween","slidesPerView","faChevronRight","faChevronLeft","map","onClick","handelClick","src","poster_path","backdrop_path","alt","id","SwiperCore","use","Navigation","MemoizedRow","React","memo","Banner","str","n","setMovie","description","setDescription","a","request","randomNumber","Math","floor","random","data","results","length","fetchData","timer","setTimeout","clearTimeout","style","backgroundImage","original_name","overview","substr","faPlay","faCircleExclamation","Nav","show","handelShow","handelScroll","window","addEventListener","scrollY","removeEventListener","MoviesListPage","movies","NetflixOriginals","Homepage","netflixOriginals","trending","topRated","actionMovies","comedyMovies","horrorMovies","romanceMovies","documentaries","Trending","TopRated","ActionMovies","ComedyMovies","HorrorMovies","RomanceMovies","Documentaries","fetchArray","App","setNetflixOriginals","setTrending","setTopRated","setActionMovies","setComedyMovies","setHorrorMovies","setRomanceMovies","setDocumentaries","category","error","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.69b6120e.chunk.js","sourcesContent":["const API_KEY = \"7bbee3bd234e91723f59f57f5ef6b033\";\n\nconst requests = {\n    fetchTrending: `/trending/all/week?api_key=${API_KEY}&language=en-US`,\n    fetchNetflixOriginals: `discover/tv?api_key=${API_KEY}&with_networks=213`,\n    fetchTopRated: `/movie/top_rated?api_key=${API_KEY}&language=en-US`,\n    fetchActionMovies: `/discover/movie?api_key=${API_KEY}&with_genres=28`,\n    fetchComedyMovies: `/discover/movie?api_key=${API_KEY}&with_genres=35`,\n    fetchHorrorMovies: `/discover/movie?api_key=${API_KEY}&with_genres=27`,\n    fetchRomanceMovies: `/discover/movie?api_key=${API_KEY}&with_genres=10749`,\n    fetchDocumentaries: `/discover/movie?api_key=${API_KEY}&with_genres=99`,\n\n}\n\n\nexport default requests;","import axios from \"axios\";\n\n\nconst instance = axios.create({\n    baseURL: 'https://api.themoviedb.org/3'\n})\n\n\nexport default instance;","import React, { useState, useEffect } from \"react\";\nimport YouTube from \"react-youtube\";\nimport movieTrailer from \"movie-trailer\";\n\nconst opts = {\n  height: \"390\",\n  width: \"100%\",\n  playerVars: {\n    // https://developers.google.com/youtube/player_parameters\n    autoplay: 1,\n  },\n};\n\nfunction Video({ movie }) {\n  console.log(\"Video component monted\");\n  const [trailerUrl, setTrailerUrl] = useState(\"\");\n  useEffect(() => {\n   \n      console.log(movie?.name);\n      movieTrailer(movie?.name || \"\")\n        .then((url) => {\n          const urlParams = new URLSearchParams(new URL(url).search);\n          console.log(urlParams.get(\"v\"));\n          setTrailerUrl(urlParams.get(\"v\"));\n        })\n        .catch((err) => console.log(err));\n    \n  }, [movie, trailerUrl]);\n\n  return <YouTube videoId={trailerUrl} opts={opts} />;\n}\n\nexport default Video;\n","import React, { useState } from \"react\";\nimport { Swiper, SwiperSlide } from \"swiper/react/swiper-react\";\nimport SwiperCore, { Navigation, Pagination } from \"swiper\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faChevronRight,\n  faChevronLeft,\n  faAnglesRight,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport Video from \"../Video\";\nimport { Link } from \"react-router-dom\";\nimport \"swiper/swiper-bundle.min.css\";\nimport \"./styles.scss\";\n\nconst posterBaseUrl = \"https://image.tmdb.org/t/p/original\";\n\nSwiperCore.use([Navigation]);\n\nfunction Row({ title, fetchedMovies, isLargeRow, routePath }) {\n  \nconsole.log({fetchedMovies})\n  const [previewMovie, setPreviewMovie] = useState(\"\");\n\n\n  const handelClick = (movie) => {\n    setPreviewMovie(movie);\n  };\n\n  return (\n    <div className=\"row\">\n      <div className=\"row__title\">\n        <Link to={routePath}>\n          <h2>\n            {title} <span>Explore all </span>{\" \"}\n            <FontAwesomeIcon icon={faAnglesRight} />\n          </h2>\n        </Link>\n      </div>\n\n      <Swiper\n        className=\"row__posters\"\n        navigation={{\n          prevEl: \".custom_prev\",\n          nextEl: \".custom_next\",\n        }}\n        spaceBetween={10}\n        slidesPerView={\"auto\"}\n      >\n        <div className=\"custom_next\">\n          <FontAwesomeIcon icon={faChevronRight} />\n        </div>\n        <div className=\"custom_prev\">\n          <FontAwesomeIcon icon={faChevronLeft} />\n        </div>\n\n        {fetchedMovies?.map((movie) => {\n          return (\n            <SwiperSlide key={movie.id}>\n              <img\n                onClick={() => handelClick(movie)}\n                key={movie.id}\n                className={`row__poster`}\n                src={`${posterBaseUrl}${\n                  isLargeRow ? movie.poster_path : movie.backdrop_path\n                }`}\n                alt={movie.name}\n              />\n            </SwiperSlide>\n          );\n        })}\n      </Swiper>\n      <div></div>\n      {previewMovie ? <Video movie={previewMovie} /> : null}\n    </div>\n  );\n}\n\n\nconst MemoizedRow = React.memo(Row);\nexport default MemoizedRow;","import React, { useState, useEffect } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlay, faCircleExclamation } from \"@fortawesome/free-solid-svg-icons\";\nimport axios from \"../../axios\";\nimport requests from \"../../requests\";\nimport \"./styles.scss\";\n\nconst posterBaseUrl = \"https://image.tmdb.org/t/p/original\";\nfunction Banner() {\n  const [movie, setMovie] = useState([]);\n  const [description, setDescription] = useState(true);\n  useEffect(() => {\n    async function fetchData() {\n      const request = await axios.get(requests.fetchNetflixOriginals);\n      const randomNumber = Math.floor(\n        Math.random() * request.data.results.length - 1\n      );\n      setMovie(request.data.results[randomNumber]);\n    }\n    fetchData();\n  }, []);\n\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n     setDescription(!description)\n    }, 4000);\n    return () => clearTimeout(timer);\n  }, []);\n\n  let truncate = (str, n) => {\n    return str?.length > n ? str.substr(0, n - 1) + \"...\" : str;\n  };\n  return (\n    <header\n      className=\"banner\"\n      style={{\n        backgroundImage: `url(\"${posterBaseUrl}/${movie?.backdrop_path}\")`,\n      }}\n    >\n      <div className=\"banner_contents\">\n        <h1 className=\"banner_title\">\n          {movie?.title || movie?.name || movie?.original_name}\n        </h1>\n        <h2 className={`banner_description ${!description? 'height-0': ''}`}>{truncate(movie?.overview, 150)}</h2>\n        <div className=\"banner__buttons\">\n          <button className=\"banner_button \">\n            <FontAwesomeIcon icon={faPlay} />\n            Play\n          </button>\n          <button className=\"banner_button transparent\">\n            <FontAwesomeIcon icon={faCircleExclamation} />\n            My List\n          </button>\n        </div>\n      </div>\n\n      <div className=\"banner--fadeBottom\"></div>\n    </header>\n  );\n}\n\nexport default Banner;\n","import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./styles.scss\";\n\nfunction Nav() {\n  const [show, handelShow] = useState(false);\n\n  useEffect(() => {\n    const handelScroll = () =>\n      window.addEventListener(\"scroll\", () => {\n        window.scrollY > 100 ? handelShow(true) : handelShow(false);\n      });\n    handelScroll();\n    return () => {\n      window.removeEventListener(\"scroll\", handelScroll);\n    };\n  }, []);\n\n  return (\n    <div className={`nav ${show && \"nav_black\"}`}>\n      <Link className=\"nav_logo\" to=\"/\">\n        <img\n          src=\"https://upload.wikimedia.org/wikipedia/commons/0/08/Netflix_2015_logo.svg\"\n          alt=\"Netflix Logo\"\n        />\n      </Link>\n\n      <img\n        className=\"nav_avatar\"\n        src=\"https://upload.wikimedia.org/wikipedia/commons/0/0b/Netflix-avatar.png\"\n        alt=\"Avatar\"\n      />\n    </div>\n  );\n}\n\nexport default Nav;\n","import React from \"react\";\r\nimport \"./styles.scss\";\r\n\r\nconst posterBaseUrl = \"https://image.tmdb.org/t/p/original\";\r\n\r\n\r\n\r\nconst MoviesListPage = ({ movies }) => {\r\n  console.log(movies);\r\n  return (\r\n    <div className=\"moviesList\">\r\n      {movies?.map((movie) => {\r\n        return (\r\n          <img\r\n            key={movie.id}\r\n            src={`${posterBaseUrl}${movie.backdrop_path}`}\r\n            alt={movie.name}\r\n          />\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MoviesListPage;\r\n","import React from \"react\";\r\nimport Nav from \"../../shared/Nav\";\r\nimport MoviesListPage from \"../MoviesListPage\";\r\n\r\nfunction NetflixOriginals({ data }) {\r\n\r\n  return (\r\n    <>\r\n      <Nav />\r\n      <MoviesListPage movies={data} />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default NetflixOriginals;\r\n","import React from \"react\";\r\nimport MemoizedRow from \"../../shared/Row\";\r\nimport Banner from \"../../shared/Banner\";\r\nimport Nav from \"../../shared/Nav\";\r\nimport NetflixOriginals from \"../NetflixOriginals\";\r\n\r\nconst Homepage = ({netflixOriginals,trending, topRated, actionMovies, comedyMovies, horrorMovies, romanceMovies,documentaries }) => {\r\n  return (\r\n    <>\r\n      <Nav />\r\n      <Banner />\r\n      <MemoizedRow\r\n        title=\"NETFLIX ORIGINAL\"\r\n        routePath={\"NetflixOriginals\"}\r\n        fetchedMovies={netflixOriginals}\r\n        isLargeRow\r\n      />\r\n      <MemoizedRow title=\"TRENDING NOW\" fetchedMovies={trending}  routePath={\"trending\"}  />\r\n      <MemoizedRow title=\"Top Rated\" fetchedMovies={topRated} routePath={\"topRated\"} />\r\n      <MemoizedRow title=\"Action Movies\" fetchedMovies={actionMovies} routePath={\"actionMovies\"} />\r\n      <MemoizedRow title=\"Comedy Movies\" fetchedMovies={comedyMovies} routePath={\"comedyMovies\"} />\r\n      <MemoizedRow title=\"Horror Movies\" fetchedMovies={horrorMovies} routePath={\"horrorMovies\"} />\r\n      <MemoizedRow title=\"Romance Movies\" fetchedMovies={romanceMovies} routePath={\"romanceMovies\"} />\r\n      <MemoizedRow title=\"documentaries \" fetchedMovies={documentaries} routePath={\"documentaries\"} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Homepage;\r\n","import React from \"react\";\r\nimport Nav from \"../../shared/Nav\";\r\nimport MoviesListPage from \"../MoviesListPage\";\r\n\r\nfunction Trending({ data }) {\r\n\r\n  return (\r\n    <>\r\n      <Nav />\r\n      <MoviesListPage movies={data} />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Trending;\r\n","import React from \"react\";\r\nimport Nav from \"../../shared/Nav\";\r\nimport MoviesListPage from \"../MoviesListPage\";\r\n\r\nfunction TopRated({ data }) {\r\n\r\n  return (\r\n    <>\r\n      <Nav />\r\n      <MoviesListPage movies={data} />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default TopRated;\r\n","import React from \"react\";\r\nimport Nav from \"../../shared/Nav\";\r\nimport MoviesListPage from \"../MoviesListPage\";\r\n\r\nfunction ActionMovies({ data }) {\r\n\r\n  return (\r\n    <>\r\n      <Nav />\r\n      <MoviesListPage movies={data} />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ActionMovies;\r\n","import React from \"react\";\r\nimport Nav from \"../../shared/Nav\";\r\nimport MoviesListPage from \"../MoviesListPage\";\r\n\r\nfunction ComedyMovies({ data }) {\r\n\r\n  return (\r\n    <>\r\n      <Nav />\r\n      <MoviesListPage movies={data} />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ComedyMovies;\r\n","import React from \"react\";\r\nimport Nav from \"../../shared/Nav\";\r\nimport MoviesListPage from \"../MoviesListPage\";\r\n\r\nfunction HorrorMovies({ data }) {\r\n\r\n  return (\r\n    <>\r\n      <Nav />\r\n      <MoviesListPage movies={data} />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default HorrorMovies;\r\n","import React from \"react\";\r\nimport Nav from \"../../shared/Nav\";\r\nimport MoviesListPage from \"../MoviesListPage\";\r\n\r\nfunction RomanceMovies({ data }) {\r\n\r\n  return (\r\n    <>\r\n      <Nav />\r\n      <MoviesListPage movies={data} />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default RomanceMovies;\r\n","import React from \"react\";\r\nimport Nav from \"../../shared/Nav\";\r\nimport MoviesListPage from \"../MoviesListPage\";\r\n\r\nfunction Documentaries({ data }) {\r\n\r\n  return (\r\n    <>\r\n      <Nav />\r\n      <MoviesListPage movies={data} />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Documentaries;\r\n","import React, { useEffect, useState } from \"react\";\nimport { Routes, Route } from \"react-router-dom\"\n\nimport requests from \"./requests\";\nimport axios from \"./axios\";\n\nimport Homepage from \"./pages/Homepage\";\nimport NetflixOriginals from \"./pages/NetflixOriginals\";\nimport Trending from \"./pages/Trending\";\nimport TopRated from \"./pages/TopRated\";\nimport ActionMovies from \"./pages/ActionMovies\";\nimport ComedyMovies from \"./pages/ComedyMovies\";\nimport HorrorMovies from \"./pages/HorrorMovies\";\nimport RomanceMovies from \"./pages/RomanceMovies\";\nimport Documentaries from \"./pages/Documentaries\";\n\nimport \"./App.css\";\nconst fetchArray = [\n  \"fetchNetflixOriginals\",\n  \"fetchTrending\",\n  \"fetchTopRated\",\n  \"fetchActionMovies\",\n  \"fetchComedyMovies\",\n  \"fetchHorrorMovies\",\n  \"fetchRomanceMovies\",\n  \"fetchDocumentaries\",\n];\n\nfunction App() {\n  const [netflixOriginals, setNetflixOriginals] = useState([]);\n  const [trending, setTrending] = useState([]);\n  const [topRated, setTopRated] = useState([]);\n  const [actionMovies, setActionMovies] = useState([]);\n  const [comedyMovies, setComedyMovies] = useState([]);\n  const [horrorMovies, setHorrorMovies] = useState([]);\n  const [romanceMovies, setRomanceMovies] = useState([]);\n  const [documentaries, setDocumentaries] = useState([]);\n\n  useEffect(() => {\n    async function fetchData() {\n      for (const category of fetchArray) {\n        try {\n          const request = await axios.get(requests[category]);\n          switch (category) {\n            case \"fetchNetflixOriginals\":\n              setNetflixOriginals(request.data.results);\n              break;\n            case \"fetchTrending\":\n              setTrending(request.data.results);\n              break;\n            case \"fetchTopRated\":\n              setTopRated(request.data.results);\n              break;\n            case \"fetchActionMovies\":\n              setActionMovies(request.data.results);\n              break;\n            case \"fetchComedyMovies\":\n              setComedyMovies(request.data.results);\n              break;\n            case \"fetchHorrorMovies\":\n              setHorrorMovies(request.data.results);\n              break;\n            case \"fetchRomanceMovies\":\n              setRomanceMovies(request.data.results);\n              break;\n            case \"fetchDocumentaries\":\n              setDocumentaries(request.data.results);\n              break;\n            default:\n              break;\n          }\n\n       \n        } catch (error) {\n          console.error(error);\n        }\n      }\n    }\n    fetchData();\n  }, []);\n\n  return (\n    <div className=\"app\">\n        <Routes>\n        <Route path=\"/\" element={  <Homepage netflixOriginals={netflixOriginals} trending={trending} topRated={topRated} actionMovies={actionMovies} comedyMovies={comedyMovies} horrorMovies={horrorMovies} romanceMovies={romanceMovies} documentaries={documentaries}/> } />\n\n        <Route path=\"/NetflixOriginals\" element={ <NetflixOriginals data={netflixOriginals}/> } />\n        <Route path=\"/trending\" element={ <Trending data={trending}/> } />\n        <Route path=\"/topRated\" element={ <TopRated data={topRated}/> } />\n        <Route path=\"/actionMovies\" element={ <ActionMovies data={actionMovies}/> } />\n        <Route path=\"/comedyMovies\" element={ <ComedyMovies data={comedyMovies}/> } />\n        <Route path=\"/horrorMovies\" element={ <HorrorMovies data={horrorMovies}/> } />\n        <Route path=\"/romanceMovies\" element={ <RomanceMovies data={romanceMovies}/> } />\n        <Route path=\"/documentaries\" element={ <Documentaries data={documentaries}/> } />\n      </Routes>\n    \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { HashRouter as Router } from \"react-router-dom\";\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}