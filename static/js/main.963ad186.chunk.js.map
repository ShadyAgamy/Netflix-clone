{"version":3,"sources":["shared/Video/index.js","axios.js","shared/Row/index.js","requests.js","shared/Banner/index.js","shared/Nav/index.js","App.js","reportWebVitals.js","index.js"],"names":["opts","height","width","playerVars","autoplay","Video","movie","console","log","useState","trailerUrl","setTrailerUrl","useEffect","name","movieTrailer","then","url","urlParams","URLSearchParams","URL","search","get","catch","err","videoId","instance","axios","create","baseURL","Row","title","fetchUrl","isLargeRow","movies","setMovies","previewMovie","setPreviewMovie","a","request","data","results","fetchData","className","map","onClick","handelClick","src","poster_path","backdrop_path","alt","id","API_KEY","requests","fetchTrending","fetchNetflixOriginals","fetchTopRated","fetchActionMovies","fetchComedyMovies","fetchHorrorMovies","fetchRomanceMovies","fetchDocumentaries","Banner","str","n","setMovie","randomNumber","Math","floor","random","length","style","backgroundImage","original_name","overview","substr","Nav","show","handelShow","window","addEventListener","scrollY","removeEventListener","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.963ad186.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport YouTube from \"react-youtube\";\r\nimport movieTrailer from \"movie-trailer\";\r\n\r\nconst opts = {\r\n  height: \"390\",\r\n  width: \"100%\",\r\n  playerVars: {\r\n    // https://developers.google.com/youtube/player_parameters\r\n    autoplay: 1,\r\n  },\r\n};\r\n\r\nfunction Video({ movie }) {\r\n  console.log(\"Video component monted\");\r\n  const [trailerUrl, setTrailerUrl] = useState(\"\");\r\n  useEffect(() => {\r\n   \r\n      console.log(movie?.name);\r\n      movieTrailer(movie?.name || \"\")\r\n        .then((url) => {\r\n          const urlParams = new URLSearchParams(new URL(url).search);\r\n          console.log(urlParams.get(\"v\"));\r\n          setTrailerUrl(urlParams.get(\"v\"));\r\n        })\r\n        .catch((err) => console.log(err));\r\n    \r\n  }, [movie, trailerUrl]);\r\n\r\n  return <YouTube videoId={trailerUrl} opts={opts} />;\r\n}\r\n\r\nexport default Video;\r\n","import axios from \"axios\";\r\n\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://api.themoviedb.org/3'\r\n})\r\n\r\n\r\nexport default instance;","import React, { useState, useEffect } from \"react\";\r\nimport Video from \"../Video\";\r\nimport axios from \"../../axios\";\r\nimport \"./styles.scss\";\r\nconst posterBaseUrl = \"https://image.tmdb.org/t/p/original\";\r\n\r\nfunction Row({ title, fetchUrl, isLargeRow }) {\r\n  const [movies, setMovies] = useState([]);\r\n  const [previewMovie, setPreviewMovie] = useState(\"\")\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      const request = await axios.get(fetchUrl);\r\n      setMovies(request.data.results);\r\n    }\r\n    fetchData();\r\n  }, [fetchUrl]);\r\n\r\n  const handelClick = movie => {\r\n    setPreviewMovie(movie)\r\n  }\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      <h2>{title}</h2>\r\n      <div className=\"row__posters\">\r\n        {movies.map((movie) => {\r\n          return (\r\n            <img\r\n            onClick={() => handelClick(movie)}\r\n              key={movie.id}\r\n              className={`row__poster ${isLargeRow? 'row__poster--large': ''}`}\r\n              src={`${posterBaseUrl}${isLargeRow ? movie.poster_path: movie.backdrop_path}`}\r\n              alt={movie.name}\r\n            />\r\n          );\r\n        })}\r\n        \r\n      </div>\r\n       {previewMovie ? <Video movie={previewMovie} /> : null} \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Row;\r\n","const API_KEY = \"7bbee3bd234e91723f59f57f5ef6b033\";\r\n\r\nconst requests = {\r\n    fetchTrending: `/trending/all/week?api_key=${API_KEY}&language=en-US`,\r\n    fetchNetflixOriginals: `discover/tv?api_key=${API_KEY}&with_networks=213`,\r\n    fetchTopRated: `/movie/top_rated?api_key=${API_KEY}&language=en-US`,\r\n    fetchActionMovies: `/discover/movie?api_key=${API_KEY}&with_genres=28`,\r\n    fetchComedyMovies: `/discover/movie?api_key=${API_KEY}&with_genres=35`,\r\n    fetchHorrorMovies: `/discover/movie?api_key=${API_KEY}&with_genres=27`,\r\n    fetchRomanceMovies: `/discover/movie?api_key=${API_KEY}&with_genres=10749`,\r\n    fetchDocumentaries: `/discover/movie?api_key=${API_KEY}&with_genres=99`,\r\n\r\n}\r\n\r\n\r\nexport default requests;","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"../../axios\";\r\nimport requests from \"../../requests\";\r\nimport \"./styles.scss\";\r\n\r\nconst posterBaseUrl = \"https://image.tmdb.org/t/p/original\";\r\nfunction Banner() {\r\n  const [movie, setMovie] = useState([]);\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      const request = await axios.get(requests.fetchNetflixOriginals);\r\n      const randomNumber = Math.floor(\r\n        Math.random() * request.data.results.length - 1\r\n      );\r\n      setMovie(request.data.results[randomNumber]);\r\n    }\r\n    fetchData();\r\n  }, []);\r\n  console.log(movie);\r\n\r\n  let truncate = (str,n) => {\r\n        return str?.length > n ? str.substr(0,n-1) + \"...\" : str;\r\n  }\r\n  return (\r\n    <header\r\n      className=\"banner\"\r\n      style={{\r\n        backgroundImage: `url(\"${posterBaseUrl}/${movie?.backdrop_path}\")`,\r\n      }}\r\n    >\r\n      <div className=\"banner_contents\">\r\n\r\n        <h1 className=\"banner_title\">\r\n          {movie?.title || movie?.name || movie?.original_name}\r\n        </h1>\r\n\r\n        <div className=\"banner__buttons\">\r\n          <button className=\"banner_button\">Play</button>\r\n          <button className=\"banner_button\">My List</button>\r\n        </div>\r\n\r\n        <h2 className=\"banner_description\">{truncate(movie?.overview, 150)}</h2>\r\n\r\n      </div>\r\n\r\n      <div className=\"banner--fadeBottom\"></div>\r\n\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Banner;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport \"./styles.scss\";\r\n\r\nfunction Nav() {\r\n  const [show, handelShow] = useState(false);\r\n  useEffect(() => {\r\n    window.addEventListener(\"scroll\", () => {\r\n      window.scrollY > 100 ? handelShow(true) : handelShow(false);\r\n    });\r\n    return () => {\r\n      window.removeEventListener(\"scroll\");\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div className={`nav ${show && 'nav_black'}`}>\r\n      <img\r\n        className=\"nav_logo\"\r\n        src=\"https://upload.wikimedia.org/wikipedia/commons/0/08/Netflix_2015_logo.svg\"\r\n        alt=\"Netflix Logo\"\r\n      />\r\n      <img\r\n        className=\"nav_avatar\"\r\n        src=\"https://upload.wikimedia.org/wikipedia/commons/0/0b/Netflix-avatar.png\"\r\n        alt=\"Avatar\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Nav;\r\n","import React from 'react';\nimport './App.css';\nimport Row from \"./shared/Row\";\nimport Banner from \"./shared/Banner\"\nimport Nav from './shared/Nav';\n\nimport requests from './requests';\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <Nav />\n      <Banner />\n      <Row title=\"NETFLIX ORIGINAL\" fetchUrl={requests.fetchNetflixOriginals} isLargeRow/>\n      <Row title=\"TRENDING NOW\" fetchUrl={requests.fetchTrending}/>\n      <Row title=\"Top Rated\" fetchUrl={requests.fetchTopRated}/>\n      <Row title=\"Action Movies\" fetchUrl={requests.fetchActionMovies}/>\n      <Row title=\"Comedy Movies\" fetchUrl={requests.fetchComedyMovies}/>\n      <Row title=\"Horror Movies\" fetchUrl={requests.fetchHorrorMovies}/>\n      <Row title=\"Romance Movies\" fetchUrl={requests.fetchRomanceMovies}/>\n      <Row title=\"documentaries \" fetchUrl={requests.fetchDocumentaries}/>\n      \n    </div>\n    \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}